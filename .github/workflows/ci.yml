name: Build & Push All Microservice Docker Images

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ closed ]
    branches: [ master ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  detect_changes:
    name: Detect changed services
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    outputs:
      patient_service_changed: ${{ steps.check_patient_service.outputs.changed }}
      auth_service_changed: ${{ steps.check_auth_service.outputs.changed }}
      billing_service_changed: ${{ steps.check_billing_service.outputs.changed }}
      analytics_service_changed: ${{ steps.check_analytics_service.outputs.changed }}
      api_gateway_changed: ${{ steps.check_api_gateway.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch full history
        run: git fetch --prune --unshallow

      - name: Check patient-service changes
        id: check_patient_service
        run: |
          CHANGES=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 | grep '^patient-service/' || echo '')
          echo "Changed files in patient-service:"
          echo "$CHANGES"
          echo "::set-output name=changed::$CHANGES"

      - name: Check auth-service changes
        id: check_auth_service
        run: |
          CHANGES=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 | grep '^auth-service/' || echo '')
          echo "Changed files in auth-service:"
          echo "$CHANGES"
          echo "::set-output name=changed::$CHANGES"

      - name: Check billing-service changes
        id: check_billing_service
        run: |
          CHANGES=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 | grep '^billing-service/' || echo '')
          echo "Changed files in billing-service:"
          echo "$CHANGES"
          echo "::set-output name=changed::$CHANGES"

      - name: Check analytics-service changes
        id: check_analytics_service
        run: |
          CHANGES=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 | grep '^analytics-service/' || echo '')
          echo "Changed files in analytics-service:"
          echo "$CHANGES"
          echo "::set-output name=changed::$CHANGES"

      - name: Check api-gateway changes
        id: check_api_gateway
        run: |
          CHANGES=$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 | grep '^api-gateway/' || echo '')
          echo "Changed files in api-gateway:"
          echo "$CHANGES"
          echo "::set-output name=changed::$CHANGES"

  build_patient_service:
    name: Build patient-service
    needs: detect_changes
    if: needs.detect_changes.outputs.patient_service_changed != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build with Maven
        run: mvn -B package --file patient-service/pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/patient-management_patient-service"
          TAG="${{ github.sha }}"
          docker build -t $IMAGE:$TAG -t $IMAGE:latest -f patient-service/Dockerfile patient-service
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

  build_auth_service:
    name: Build auth-service
    needs: detect_changes
    if: needs.detect_changes.outputs.auth_service_changed != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build with Maven
        run: mvn -B package --file auth-service/pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/patient-management_auth-service"
          TAG="${{ github.sha }}"
          docker build -t $IMAGE:$TAG -t $IMAGE:latest -f auth-service/Dockerfile auth-service
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

  build_billing_service:
    name: Build billing-service
    needs: detect_changes
    if: needs.detect_changes.outputs.billing_service_changed != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build with Maven
        run: mvn -B package --file billing-service/pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/patient-management_billing-service"
          TAG="${{ github.sha }}"
          docker build -t $IMAGE:$TAG -t $IMAGE:latest -f billing-service/Dockerfile billing-service
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

  build_analytics_service:
    name: Build analytics-service
    needs: detect_changes
    if: needs.detect_changes.outputs.analytics_service_changed != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build with Maven
        run: mvn -B package --file analytics-service/pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/patient-management_analytics-service"
          TAG="${{ github.sha }}"
          docker build -t $IMAGE:$TAG -t $IMAGE:latest -f analytics-service/Dockerfile analytics-service
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest

      - name: Update image tag in GitOps repo
        env:
          GITOPS_REPO: https://github.com/bhavin-matreja/patient-management-manifest.git
          GITOPS_DIR: gitops
          GITOPS_REPO_TOKEN: ${{ secrets.GITOPS_REPO_TOKEN }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sudo apt-get update && apt-get install -y yq git
  
          git clone https://$GITOPS_REPO_TOKEN@github.com/bhavin-matreja/patient-management-manifest.git $GITOPS_DIR
          cd $GITOPS_DIR
  
          yq eval -i ".image.tag = \"${IMAGE_TAG}\"" analytics-service/values.yaml
  
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
  
          git add analytics-service/values.yaml
          git commit -m "Update analytics-service image tag to ${IMAGE_TAG}"
          git push

  build_api_gateway:
    name: Build api-gateway
    needs: detect_changes
    if: needs.detect_changes.outputs.api_gateway_changed != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build with Maven
        run: mvn -B package --file api-gateway/pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/patient-management_api-gateway"
          TAG="${{ github.sha }}"
          docker build -t $IMAGE:$TAG -t $IMAGE:latest -f api-gateway/Dockerfile api-gateway
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest
